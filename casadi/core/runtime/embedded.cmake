file(STRINGS "${FILE}" FILE_CONTENTS)
file(WRITE ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp "namespace casadi {\n" )

set(FUNCTION_NAME "")
set(INDENTATION "")
foreach(line ${FILE_CONTENTS})
  if (line MATCHES ".* CASADI_PREFIX\\(([a-z_0-9]+)\\).*{.*")
    string(REGEX REPLACE ".* CASADI_PREFIX\\(([a-z_0-9]+)\\).*{.*" "\\1" result "${line}")
    string(REGEX REPLACE "^( +).*" "\\1" INDENTATION "${line}")
    set(FUNCTION "${result}")
    file(APPEND ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp "const char * codegen_str_${FUNCTION} =\n" )
  endif()
  if (INDENTATION)
    string(REGEX REPLACE "^${INDENTATION}(.*)" "\\1" line "${line}")
  endif()
  if (FUNCTION)
    file(APPEND ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp "\"${line}\\n\"" )
    if (line MATCHES "^}")
      set(FUNCTION "")
      file(APPEND ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp ";\n\n" )
    else ()
      file(APPEND ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp "\n" )
    endif()
  endif()
endforeach()
foreach(line ${FILE_CONTENTS})
  if (line MATCHES "^#define CASADI_PREFIX\\(([A-Z_0-9]+)\\)\\(.*\\ *$")
    string(REGEX REPLACE ".*CASADI_PREFIX\\(([A-Z_0-9]+)\\)\\(.*" "\\1" result "${line}")
    string(TOLOWER "${result}" result)
    string(REPLACE " ;" " <linebreak>" line "${line}")
    string(REPLACE ";" "\;" line "${line}")
    string(REPLACE "<linebreak>" " ;" line "${line}")
    file(APPEND ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp "const char * codegen_str_${result} =" )
    foreach(subline ${line})
      file(APPEND ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp "\n" )
      file(APPEND ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp "\"${subline}\\n\"" )
    endforeach()
    file(APPEND ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp ";\n\n" )
  endif()
endforeach()
foreach(line ${FILE_CONTENTS})
  if (line MATCHES ".* CASADI_PREFIX\\(([a-z_0-9]+)\\).*{.*")
    string(REGEX REPLACE ".* CASADI_PREFIX\\(([a-z_0-9]+)\\).*{.*" "\\1" FUNCTION "${line}")
    string(REGEX REPLACE ".* CASADI_PREFIX\\(([a-z_0-9]+)\\)\\((.*)\\).*{.*" "\\2" args "${line}")
    string(REGEX REPLACE "[^,]* ([a-zA-Z_0-9]+)," "\\1, " args "${args}")
    string(REGEX REPLACE "[^,]* ([a-z_0-9]+)$" "\\1" args "${args}")
    set(def "#define ${FUNCTION}(${args}) CASADI_PREFIX(${FUNCTION})(${args})")
    file(APPEND ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp "const char * codegen_str_${FUNCTION}_define = \"${def}\\n\";\n" )
  endif()
endforeach()
file(APPEND ${BINARY_DIR}/${FILE_BASENAME}_embedded.hpp "}" )
